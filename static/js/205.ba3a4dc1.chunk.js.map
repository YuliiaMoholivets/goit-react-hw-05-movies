{"version":3,"file":"static/js/205.ba3a4dc1.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.js","webpack://react-homework-template/./src/page/Movies/Movies.module.css?e724","components/Form/Form.jsx","page/Movies/Movies.js","servises/API.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ searchMovies }) => {\n  const location = useLocation();\n  return (\n      <ul>\n        {searchMovies.map(({id, original_title}) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n  );\n};\n\nexport default MovieList;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"Movies_SearchForm__fZVtZ\",\"Button\":\"Movies_Button__21Bhz\",\"label\":\"Movies_label__zc-xD\",\"input\":\"Movies_input__3JANh\"};","import { useSearchParams } from 'react-router-dom';\nimport styles from '../../page/Movies/Movies.module.css'\n\nexport const Form = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    let firstValue = searchParams.get('firstValue');\n\n    const handleSubmitSearchMovie = evt => {\n    evt.preventDefault();\n    firstValue = evt.currentTarget.elements.name.value;\n    if (firstValue.trim() === '') {\n      return;\n    }\n    setSearchParams({ firstValue });\n    };\n\n  return (\n    <div>\n        <form className={styles.SearchForm} onSubmit={handleSubmitSearchMovie}>\n        <input\n            className={styles.input}\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search film\"\n   \n          />\n          <button type=\"submit\" className={styles.Button}>\n            <span className={styles.label}>Search</span>\n          </button>\n        </form>\n      </div>\n  )\n}\n","import MovieList from 'components/MovieList/MovieList';\n\nimport { useEffect, useState } from 'react';\nimport { Form } from 'components/Form/Form';\nimport { searchingFilms } from 'servises/API';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const firstValue = searchParams.get('firstValue');\n\n  useEffect(() => {\n    if (!firstValue) return;\n    const getSearchingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const searchMovies = await searchingFilms(firstValue);\n\n        if (!searchMovies.length) {\n          setError('There are no movies for your request');\n          return;\n        }\n        setSearchMovies(searchMovies);\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getSearchingMovies();\n  }, [firstValue]);\n\n  useEffect(() => {\n    if (error) {\n       alert(error);\n    }\n  }, [error]);\n  \n\n  return (\n    <>\n      <Form />\n      {searchMovies.length >0 && !isLoading && <MovieList searchMovies={searchMovies} /> }\n    </>\n  );\n};\n\nexport default Movies;\n\n\n","import axios from 'axios';\nimport Img from '../components/Image/img.png';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '817d33fa7e0ddfc368fbd7439a742f76';\n\nconst params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport async function trendingFilms() {\n  const { data } = await axios.get('/trending/movie/day', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function searchingFilms(query) {\n  const params = {\n    query,\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getFilmsById(id) {\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n  return {\n    poster_path: poster_path\n      ? 'https://image.tmdb.org/t/p/w500' + poster_path\n      : Img,\n    original_title,\n    release_date: release_date.slice(0, 4),\n    vote_average: vote_average.toFixed(2),\n    overview,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n}\n\nexport async function getCreditsById(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, { params });\n  const credits = data.cast.map(({ id, name, profile_path }) => ({\n    id,\n    name,\n    profile_path: profile_path\n      ? 'https://image.tmdb.org/t/p/w500' + profile_path\n      : Img,\n  }));\n  return credits;\n}\n\nexport async function getReviewsById(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`, { params });\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n}\n"],"names":["searchMovies","location","useLocation","map","id","original_title","to","state","from","Form","useSearchParams","searchParams","setSearchParams","firstValue","get","className","styles","onSubmit","evt","preventDefault","currentTarget","elements","name","value","trim","type","autoComplete","autoFocus","placeholder","useState","setSearchMovies","error","setError","isLoading","setIsLoading","useEffect","getSearchingMovies","searchingFilms","length","message","alert","axios","API_KEY","params","api_key","language","include_adult","trendingFilms","data","movies","results","query","getFilmsById","poster_path","release_date","vote_average","overview","genres","Img","slice","toFixed","join","getCreditsById","credits","cast","profile_path","getReviewsById","reviews","author","content"],"sourceRoot":""}