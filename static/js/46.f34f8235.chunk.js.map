{"version":3,"file":"static/js/46.f34f8235.chunk.js","mappings":"iOAmBWA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,EClBpB,EAAsB,qB,SCYtB,EAVgB,WACd,IAAMG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CAAMC,UAAWC,EAAYC,GAAIJ,EAASK,MAAMC,KAAhD,2BAIH,ECVD,EAA0B,8BAA1B,EAAgE,4BAAhE,EAAyG,iCAAzG,EAAqL,2BAArL,EAA4N,gCAA5N,EAAmQ,2BC+FnQ,EAxFqB,WACnB,IAAMC,GAASC,EAAAA,EAAAA,MACTC,EAAWC,OAAOH,EAAOI,UAC/B,GAAsCC,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMd,GAAWC,EAAAA,EAAAA,MAsBjB,OALAc,EAAAA,EAAAA,YAAU,WAXRC,MAAM,GAAD,OAJW,gCAIX,iBAAsBP,EAAtB,oBALS,mCAKT,oBACFQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sBACjC,IACAN,MAAK,SAAAO,GAAO,OAAIV,EAAeU,EAAnB,IACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAMf,GAAE,KAGD,gCACE,SAAC,EAAD,IACCb,IACC,iBAAKX,UAAWC,EAAhB,UACGU,EAAYgB,aACX,gBACE3B,UAAWC,EACX2B,IAAG,UA3BI,oCA2BJ,OAAkBjB,EAAYgB,aACjCE,IAAKlB,EAAYmB,SAGnB,gBAAK9B,UAAWC,EAAc2B,IAAKG,EAAOF,IAAI,aAEhD,4BACE,eAAG7B,UAAWC,EAAd,UACGU,EAAYmB,MACZnB,EAAYqB,cACX,gCAAQrB,EAAYqB,aAAaC,MAAM,EAAG,GAA1C,QAEA,uCALkC7C,MAQtC,eAAGY,UAAWC,EAAd,yBAEE,kBAAMD,UAAWC,EAAjB,UACGO,OAAO0B,SAAoC,GAA3BvB,EAAYwB,cAD/B,UAFoC/C,MAMtC,eAAGY,UAAWC,EAAd,wBACY,mBACV,iBAAMD,UAAWC,EAAjB,SAA+BU,EAAYyB,aAFPhD,MAItC,eAAGY,UAAWC,EAAd,sBACU,kBACPU,EAAY0B,OAAOC,KAAI,SAAAC,GAAK,OAC3B,iBAAMvC,UAAWC,EAAjB,SAA+BsC,EAAMC,MADV,MAFOpD,YAS5C,gBAAIY,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,KAAMN,EAASK,MAAMC,MAA9C,mBAD+BhB,MAKjC,eAAIY,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAG,UAAUC,MAAO,CAAEC,KAAMN,EAASK,MAAMC,MAAjD,sBAD+BhB,SAOnC,SAAC,EAAAqD,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/BtnBack/BackBtn.module.css?fe97","components/BtnBack/BackBtn.js","webpack://react-homework-template/./src/page/MovieDetails/MovieDetails.module.css?40f4","page/MovieDetails/MovieDetails.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"BackBtn_btn__I8oiG\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './BackBtn.module.css';\n\nconst BackBtn = () => {\n  const location = useLocation();\n\n  return (\n    <Link className={styles.btn} to={location.state.from}>\n      &#10229; Go back\n    </Link>\n  );\n};\n\nexport default BackBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieDetails_section__PqbxF\",\"image\":\"MovieDetails_image__iOHXz\",\"main_title\":\"MovieDetails_main_title__1G+ye\",\"title\":\"MovieDetails_title__h+zLE\",\"line\":\"MovieDetails_line__V885L\",\"link_list\":\"MovieDetails_link_list__txsLw\",\"item\":\"MovieDetails_item__5861v\"};","import PropTypes from 'prop-types';\nimport Image from '../../components/Image/img.png';\nimport { useEffect, useState, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport BackBtn from 'components/BtnBack/BackBtn';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const paramsId = Number(params.moviesId);\n  const [movieDetail, setMovieDetail] = useState();\n  const location = useLocation();\n  const API_KEY = '817d33fa7e0ddfc368fbd7439a742f76';\n  const originURL = 'https://api.themoviedb.org/3/';\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  const searchMovieById = () => {\n    fetch(`${originURL}movie/${paramsId}?api_key=${API_KEY}&language=en-US`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Enter another name'));\n      })\n      .then(results => setMovieDetail(results))\n      .catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    searchMovieById();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section>\n      <BackBtn />\n      {movieDetail && (\n        <div className={styles.section}>\n          {movieDetail.poster_path ? (\n            <img\n              className={styles.image}\n              src={`${baseImgUrl}${movieDetail.poster_path}`}\n              alt={movieDetail.title}\n            />\n          ) : (\n            <img className={styles.image} src={Image} alt=\"No foto\" />\n          )}\n          <div>\n            <p className={styles.main_title} key={nanoid()}>\n              {movieDetail.title}\n              {movieDetail.release_date ? (\n                <span>({movieDetail.release_date.slice(0, 4)})</span>\n              ) : (\n                <span>(----)</span>\n              )}\n            </p>\n            <p className={styles.main_title} key={nanoid()}>\n              User score:\n              <span className={styles.line}>\n                {Number.parseInt(movieDetail.vote_average * 10)} &#37;\n              </span>\n            </p>\n            <p className={styles.main_title} key={nanoid()}>\n              Overview: <br />\n              <span className={styles.line}>{movieDetail.overview}</span>\n            </p>\n            <p className={styles.main_title} key={nanoid()}>\n              Genres: <br />\n              {movieDetail.genres.map(genre => (\n                <span className={styles.line}>{genre.name}</span>\n              ))}\n            </p>\n          </div>\n        </div>\n      )}\n      <ul className={styles.link_list}>\n        <li className={styles.item} key={nanoid()}>\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li className={styles.item} key={nanoid()}>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={<p>Loading.....</p>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  state: PropTypes.object,\n};\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","location","useLocation","className","styles","to","state","from","params","useParams","paramsId","Number","moviesId","useState","movieDetail","setMovieDetail","useEffect","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","console","log","poster_path","src","alt","title","Image","release_date","slice","parseInt","vote_average","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}