{"version":3,"file":"static/js/128.dc773a45.chunk.js","mappings":"0NAgDA,EA5CkB,SAAAA,GAChB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAKMC,EAAOJ,EAAMK,WAuBnB,OAPAC,EAAAA,EAAAA,YAAU,WACiB,KAArBN,EAAMK,YAdVE,MAAM,GAAD,OALW,gCAKX,gCANS,mCAMT,YAJO,UAIP,OACoDH,EADpD,oBAGFI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sBACjC,IACAN,MAAK,gBAAGO,EAAH,EAAGA,QAAH,OAAiBZ,EAAeY,EAAhC,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAQf,GAAE,CAACjB,EAAMK,cAGR,0BACE,wBACGH,EAAYkB,KAAI,SAAAC,GAAK,OACpB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM,WAAhD,SACGJ,EAAMK,SAFFL,EAAME,GADK,OAU7B,EC7CD,EAA6B,2BAA7B,EAAiE,uBAAjE,EAAgG,sBAAhG,EAA8H,sBCwC9H,EApCe,WACb,OAAoCtB,EAAAA,EAAAA,UAAS,IAA7C,eAAOI,EAAP,KAAmBsB,EAAnB,KAaA,OACE,iCACE,0BACE,kBAAMC,UAAWC,EAAmBC,SAdV,SAAAC,GAC9BA,EAAIC,iBACJ,IAAMC,EAAaF,EAAIG,cAAcC,SAAS/B,KAAKgC,MACzB,KAAtBH,EAAWI,QAIfV,EAAcM,EAAWI,QACzBN,EAAIG,cAAcI,SAJhBP,EAAIG,cAAcI,OAKrB,EAKK,WACE,kBACEV,UAAWC,EACXzB,KAAK,OACLmC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,iBAEd,mBAAQH,KAAK,SAASX,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,4BAIN,SAAC,EAAD,CAAWxB,WAAYA,MAG5B,C","sources":["components/MovieList/MovieList.js","webpack://react-homework-template/./src/page/Movies/Movies.module.css?e724","page/Movies/Movies.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = props => {\n  const [searchMovie, setSearchMovie] = useState([]);\n\n  const API_KEY = '817d33fa7e0ddfc368fbd7439a742f76';\n  const originURL = 'https://api.themoviedb.org/3/';\n  const query = 'query=';\n  const name = props.searchName;\n\n  const searchMovieByName = () => {\n    fetch(\n      `${originURL}search/movie?api_key=${API_KEY}&${query}${name}&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Enter another name'));\n      })\n      .then(({ results }) => setSearchMovie(results))\n      .catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    if (props.searchName === '') {\n      return;\n    } else searchMovieByName();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.searchName]);\n\n  return (\n    <div>\n      <ul>\n        {searchMovie.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: '/movies' }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  props: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"Movies_SearchForm__fZVtZ\",\"Button\":\"Movies_Button__21Bhz\",\"label\":\"Movies_label__zc-xD\",\"input\":\"Movies_input__3JANh\"};","import MovieList from 'components/MovieList/MovieList';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchName, setSearchName] = useState('');\n\n  const handleSubmitSearchMovie = evt => {\n    evt.preventDefault();\n    const firstValue = evt.currentTarget.elements.name.value;\n    if (firstValue.trim() === '') {\n      evt.currentTarget.reset();\n      return;\n    }\n    setSearchName(firstValue.trim());\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <div>\n        <form className={styles.SearchForm} onSubmit={handleSubmitSearchMovie}>\n          <input\n            className={styles.input}\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search film\"\n          />\n          <button type=\"submit\" className={styles.Button}>\n            <span className={styles.label}>Search</span>\n          </button>\n        </form>\n      </div>\n      <MovieList searchName={searchName} />\n    </>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  searchName: PropTypes.string,\n};\n"],"names":["props","useState","searchMovie","setSearchMovie","name","searchName","useEffect","fetch","then","response","ok","json","Promise","reject","Error","results","catch","error","console","log","map","movie","to","id","state","from","title","setSearchName","className","styles","onSubmit","evt","preventDefault","firstValue","currentTarget","elements","value","trim","reset","type","autoComplete","autoFocus","placeholder"],"sourceRoot":""}